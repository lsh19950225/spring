<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

   <!-- 에러 : spring-security-4.2.xsd 수정. -->
   
   <!-- css, js, image, static(정적) 등등   보안 필터 체인 X -->
   <security:http pattern="/static/**" security="none"></security:http>
   <security:http pattern="/design/**" security="none"></security:http>
   <security:http pattern="/css/**" security="none"></security:http>
   <security:http pattern="/js/**" security="none"></security:http>
   
   							<!-- p681 / 기본값 : true -->
   <security:http use-expressions="true">
      
   	  <security:intercept-url pattern="/customer/noticeReg.htm" access="isAuthenticated()"/>
      <security:intercept-url pattern="/customer/noticeDel.htm" access="hasRole('ROLE_ADMIN')"/>
      <security:intercept-url pattern="/**" access="permitAll" />
      
      <!-- 우리가 만든 로그인페이지 연결 -->
      <!-- /joinus/login.htm -> login.jsp -->
      <!-- login-page="/joinus/login.htm" + get 방식이다. -->
      
      <!-- default-target-url="/index.htm" : 로그인 페이지에서 가야되는 경로 -->
      <security:form-login
      	login-page="/joinus/login.htm"
      	default-target-url="/index.htm"
      	authentication-failure-url="/joinus/login.htm?error=true"
      	authentication-success-handler-ref="customLoginSuccessHandler"
       />
       
       <!-- hong 인증 -> 삭제버튼 403 접근 금지 오류 : 특정 url 이동 -->
       <!-- 
       <security:access-denied-handler error-page="/common/accessError.htm" />
        -->
       
       <!-- 403 접근 금지 오류 : 직접 개발자가 구현한 클래스 객체 호출 -->
       <security:access-denied-handler ref="customAccessDeniedHandler" />
       
       <security:logout logout-url="/joinus/logout.htm" invalidate-session="true"
       	logout-success-url="/"
        />
       
   </security:http>
   
   <!-- 스프링 시큐리티 5버전부터는 반드시 PasswordEncoder를 이용해서 비밀번호 변경/처리 -->
   <!-- 인증관리자 : 총괄책임자 -->
   <security:authentication-manager>
   	<!-- 인증제공자 : 실무자 -->
   	<security:authentication-provider>
   		<security:user-service>
   			<security:user name="hong" authorities="ROLE_USER" password="{noop}1234"/> <!-- {noop} : 암호화 처리 안하고 쓰겠다. -->
            <security:user name="admin" authorities="ROLE_USER, ROLE_MANAGER, ROLE_ADMIN" password="{noop}1234"/>
   		</security:user-service>
   	</security:authentication-provider>
   </security:authentication-manager>

</beans>