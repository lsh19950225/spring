/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-11-15 00:57:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.scott;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dept_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1731460985300L));
    _jspx_dependants.put("jar:file:/C:/Class/Workspace/SpringClass/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SL01_MVC/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/resources/images/SiSt.ico\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/cdn-main/example.css\">\r\n");
      out.write("<script src=\"/resources/cdn-main/example.js\"></script>\r\n");
      out.write("<script src=\"/resources/js/dept.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(" span.material-symbols-outlined{\r\n");
      out.write("    vertical-align: text-bottom;\r\n");
      out.write(" }  \r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("   /* The Modal (background) */\r\n");
      out.write("   .modal {\r\n");
      out.write("     display: none; /* Hidden by default */\r\n");
      out.write("     position: fixed; /* Stay in place */\r\n");
      out.write("     z-index: 1; /* Sit on top */\r\n");
      out.write("     padding-top: 100px; /* Location of the box */\r\n");
      out.write("     left: 0;\r\n");
      out.write("     top: 0;\r\n");
      out.write("     width: 100%; /* Full width */\r\n");
      out.write("     height: 100%; /* Full height */\r\n");
      out.write("     overflow: auto; /* Enable scroll if needed */\r\n");
      out.write("     background-color: rgb(0,0,0); /* Fallback color */\r\n");
      out.write("     background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   /* Modal Content */\r\n");
      out.write("   .modal-content {\r\n");
      out.write("     position: relative;\r\n");
      out.write("     background-color: #fefefe;\r\n");
      out.write("     margin: auto;\r\n");
      out.write("     padding: 0;\r\n");
      out.write("     border: 1px solid #888;\r\n");
      out.write("     width: 40%;\r\n");
      out.write("     box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\r\n");
      out.write("     -webkit-animation-name: animatetop;\r\n");
      out.write("     -webkit-animation-duration: 0.4s;\r\n");
      out.write("     animation-name: animatetop;\r\n");
      out.write("     animation-duration: 0.4s\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   /* Add Animation */\r\n");
      out.write("   @-webkit-keyframes animatetop {\r\n");
      out.write("     from {top:-300px; opacity:0} \r\n");
      out.write("     to {top:0; opacity:1}\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   @keyframes animatetop {\r\n");
      out.write("     from {top:-300px; opacity:0}\r\n");
      out.write("     to {top:0; opacity:1}\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   /* The Close Button */\r\n");
      out.write("   .close {\r\n");
      out.write("     color: white;\r\n");
      out.write("     float: right;\r\n");
      out.write("     font-size: 28px;\r\n");
      out.write("     font-weight: bold;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .close:hover,\r\n");
      out.write("   .close:focus {\r\n");
      out.write("     color: #000;\r\n");
      out.write("     text-decoration: none;\r\n");
      out.write("     cursor: pointer;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-header {\r\n");
      out.write("     padding: 2px 16px;\r\n");
      out.write("     background-color: white;\r\n");
      out.write("     color: black;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-body {padding: 2px 16px;}\r\n");
      out.write("   \r\n");
      out.write("   .modal-footer {\r\n");
      out.write("     padding: 2px 16px;\r\n");
      out.write("     background-color: gray;\r\n");
      out.write("     color: white;\r\n");
      out.write("   }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("  <h1 class=\"main\"><a href=\"#\" style=\"position: absolute;top:30px;\">KenIk HOme</a></h1>\r\n");
      out.write("  <ul>  \r\n");
      out.write("    <li><a href=\"#\">로그인</a></li>\r\n");
      out.write("    <li><a href=\"#\">회원가입</a></li>\r\n");
      out.write("  </ul>\r\n");
      out.write("</header>\r\n");
      out.write("<div>\r\n");
      out.write("  <xmp class=\"code\">\r\n");
      out.write("  	dept.jsp\r\n");
      out.write("  </xmp>\r\n");
      out.write("  \r\n");
      out.write("  <form action=\"/scott/emp\" method=\"post\">\r\n");
      out.write("  <table id=\"tbl-dept\">\r\n");
      out.write("    <caption></caption>\r\n");
      out.write("    <thead>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th></th>\r\n");
      out.write("        <th>DeptNo</th>\r\n");
      out.write("        <th>DName</th>\r\n");
      out.write("        <th>Loc</th>\r\n");
      out.write("        <th>Edit</th>\r\n");
      out.write("      </tr>     \r\n");
      out.write("     </thead>\r\n");
      out.write("     <tbody>\r\n");
      out.write("     	");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("</tbody>\r\n");
      out.write("     <tfoot>\r\n");
      out.write("     	<tr>\r\n");
      out.write("     		<td colspan=\"5\">\r\n");
      out.write("     			<button id=\"search\" class=\"search\"  type=\"button\">search</button>\r\n");
      out.write("                <button id=\"add\" type=\"button\" class=\"add\">부서추가</button>\r\n");
      out.write("     		</td>\r\n");
      out.write("     	</tr>\r\n");
      out.write("     </tfoot>\r\n");
      out.write("  </table>\r\n");
      out.write("  </form>\r\n");
      out.write("  \r\n");
      out.write("  <!-- 부서 추가 모달창 -->\r\n");
      out.write("<!-- The Modal -->\r\n");
      out.write("<div id=\"add-modal\" class=\"modal\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Modal content -->\r\n");
      out.write("  <div class=\"modal-content\">\r\n");
      out.write("    <div class=\"modal-header\"> \r\n");
      out.write("      <h2>Ajax 부서 추가</h2>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"modal-body\">\r\n");
      out.write("      <div class=\"group\">\r\n");
      out.write("        <label>부서번호</label>\r\n");
      out.write("        <input type=\"text\" class=\"short\" name=\"deptno\" value=\"50\">\r\n");
      out.write("       </div>\r\n");
      out.write("       <div class=\"group\">\r\n");
      out.write("           <label>부서명</label>\r\n");
      out.write("           <input type=\"text\" class=\"short\" name=\"dname\" value=\"QC\">\r\n");
      out.write("       </div>\r\n");
      out.write("       <div class=\"group\">\r\n");
      out.write("           <label>지역명</label>\r\n");
      out.write("           <input type=\"text\" class=\"short\" name=\"loc\" value=\"SEOUL\">\r\n");
      out.write("       </div>\r\n");
      out.write("       <div>\r\n");
      out.write("           <button id=\"add-dept\" type=\"button\" class=\"ok\">확인</button>\r\n");
      out.write("           <button type=\"button\" class=\"cancel\">닫기</button>\r\n");
      out.write("       </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"modal-footer\">\r\n");
      out.write("      <h3>Modal Footer</h3>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div> \r\n");
      out.write("</div>  \r\n");
      out.write("  \r\n");
      out.write("  <!-- 추가 버튼 -->\r\n");
      out.write("  <script>\r\n");
      out.write("  	$(function (){\r\n");
      out.write("  		// dept.js\r\n");
      out.write("  		var addModal = $(\"#add-modal\");\r\n");
      out.write("  		// 부서 추가 버튼\r\n");
      out.write("  		$(\"#add\").on(\"click\",function(event){\r\n");
      out.write("  			addModal.css(\"display\", \"block\");\r\n");
      out.write("  			event.stopPropagation();\r\n");
      out.write("  		});\r\n");
      out.write("  		// 모달창의 닫기 버튼\r\n");
      out.write("  		$(\".cancel\").on(\"click\",function(){\r\n");
      out.write("  			addModal.css(\"display\", \"none\");\r\n");
      out.write("  		});\r\n");
      out.write("  		// 모달창 밖에를 클릭해도 창이 사라지게 한다.\r\n");
      out.write("  		$(\"body\").on(\"click\", function (event){\r\n");
      out.write("  			// alert(event.currentTarget); HtmlBodyElement\r\n");
      out.write("         	if( event.currentTarget == addModal ) addModal.css(\"display\", \"none\");  \r\n");
      out.write("   		});\r\n");
      out.write("  		// 모달창 확인 버튼\r\n");
      out.write("  		$(\"#add-modal #add-dept\").on(\"click\",function(){\r\n");
      out.write("  			let deptno = $(\"#add-modal :text[name=deptno]\").val();\r\n");
      out.write("  			let dname = $(\"#add-modal :text[name=dname]\").val();\r\n");
      out.write("  			let loc = $(\"#add-modal :text[name=loc]\").val();\r\n");
      out.write("  			const dept = {\r\n");
      out.write("  					deptno:deptno,\r\n");
      out.write("  					dname:dname,\r\n");
      out.write("  					loc:loc\r\n");
      out.write("  			};\r\n");
      out.write("  			\r\n");
      out.write("  			// [dept.js] jq ajax + js객체.add(dept, callback, error) 선언\r\n");
      out.write("  			deptService.add(dept, function(result){\r\n");
      out.write("  				// 1. 모달창 닫기\r\n");
      out.write("  				addModal.css(\"display\", \"none\");\r\n");
      out.write("  				// 2. \r\n");
      out.write("  				if(result == \"SUCCESS\"){\r\n");
      out.write("  					let tr = $(`\r\n");
      out.write("  	                      <tr>\r\n");
      out.write("  	                        <td><input type=\"checkbox\" data-deptno=\"${ deptno }\" value=\"${ deptno }\" name=\"deptno\"></td>\r\n");
      out.write("  	                       <td>${ deptno }</td>\r\n");
      out.write("  	                       <td>${ dname }<span class=\"badge right red\">0</span></td>\r\n");
      out.write("  	                       <td>${ loc }</td>\r\n");
      out.write("  	                       <td align=\"center\"><span class=\"material-symbols-outlined delete\" data-deptno=\"${ deptno }\">close</span></td>\r\n");
      out.write("  	                     </tr>\r\n");
      out.write("  	                      `);\r\n");
      out.write("  					\r\n");
      out.write("  					$(tr)\r\n");
      out.write("  						.appendTo( $(\"table tbody\") )\r\n");
      out.write("  						.find(\"span.delete\")\r\n");
      out.write("  							.on(\"click\",function(){\r\n");
      out.write("  								// alert(\"클릭한 부서 삭제\");\r\n");
      out.write("  								\r\n");
      out.write("  								if (   confirm(\"정말 삭제할까요?\")  ) {\r\n");
      out.write("                             // data-deptno=\"50\"\r\n");
      out.write("                               let deptno = $(this).data(\"deptno\");\r\n");
      out.write("                             var spanDelete = $(this);\r\n");
      out.write("                           deptService.remove(deptno, function (result){\r\n");
      out.write("                            if(result === 'SUCCESS')\r\n");
      out.write("                               spanDelete.parents(\"tr\").remove();\r\n");
      out.write("                             });\r\n");
      out.write("                          } // if\r\n");
      out.write("  								\r\n");
      out.write("  								/* let deptno = $(this).data(\"deptno\");\r\n");
      out.write("  					  			let rowToDelete = $(this).closest(\"tr\");\r\n");
      out.write("  					  			\r\n");
      out.write("  					  			deptRemove.remove(deptno, function(result){\r\n");
      out.write("  					  				if(result == \"SUCCESS\"){\r\n");
      out.write("  					  					rowToDelete.remove();\r\n");
      out.write("  					  				} // if\r\n");
      out.write("  					  				alert(result);\r\n");
      out.write("  					  			}); */\r\n");
      out.write("  								\r\n");
      out.write("  							});\r\n");
      out.write("  				} // if\r\n");
      out.write("  				alert(result);\r\n");
      out.write("  			});\r\n");
      out.write("  		});\r\n");
      out.write("  		\r\n");
      out.write("  		// 새로 생성되는 부서의 닫기가 아닌 원래 있던 닫기 버튼의 클릭 이벤트\r\n");
      out.write("  		$(\"#tbl-dept > tbody > tr > td:nth-child(5) > span\").on(\"click\",function(){\r\n");
      out.write("  			// alert(\"클릭한 부서 삭제\");\r\n");
      out.write("  			\r\n");
      out.write("  			/* let deptno = $(this).data(\"deptno\");\r\n");
      out.write("  			let rowToDelete = $(this).closest(\"tr\");\r\n");
      out.write("  			\r\n");
      out.write("  			deptRemove.remove(deptno, function(result){\r\n");
      out.write("  				if(result == \"SUCCESS\"){\r\n");
      out.write("  					rowToDelete.remove();\r\n");
      out.write("  				} // if\r\n");
      out.write("  				alert(result);\r\n");
      out.write("  			}); */\r\n");
      out.write("  			\r\n");
      out.write("  		});\r\n");
      out.write("  		\r\n");
      out.write("  		// 검색 버튼\r\n");
      out.write("  		$(\"#search\").on(\"click\",function(event){\r\n");
      out.write("  	  		if ( !$(\"tbody :checkbox:checked\").length ) {\r\n");
      out.write("  	  			alert(\"부서를 체크하세요.\");\r\n");
      out.write("  	  			return ;\r\n");
      out.write("  	  		} // if\r\n");
      out.write("  	  		\r\n");
      out.write("  	  		$(\"form\").submit();\r\n");
      out.write("  	  	});\r\n");
      out.write("  	}); // document. ready\r\n");
      out.write("  </script>\r\n");
      out.write("  \r\n");
      out.write("</div> \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/scott/dept.jsp(120,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/scott/dept.jsp(120,6) '${list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/scott/dept.jsp(120,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("dto");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("<tr>\r\n");
            out.write("     			<td><input id=\"ischeck\" type=\"checkbox\" name=\"deptno\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.deptno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" data-deptno=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.deptno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"></td>\r\n");
            out.write("     			<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.deptno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("     			<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.dname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("<span class=\"badge right red\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.numberOfEmps}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span></td>\r\n");
            out.write("     			<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.loc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("     			<td align=\"center\">\r\n");
            out.write("     				<span class=\"material-symbols-outlined delete\" \r\n");
            out.write("          		 	data-deptno=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.deptno }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">close</span>\r\n");
            out.write("     			</td>\r\n");
            out.write("     		</tr>\r\n");
            out.write("     	");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
